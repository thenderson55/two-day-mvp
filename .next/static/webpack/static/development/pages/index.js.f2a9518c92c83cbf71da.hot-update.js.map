{"version":3,"file":"static/webpack/static/development/pages/index.js.f2a9518c92c83cbf71da.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../components/Layout'\nimport CardList from '../components/CardList'\nimport Card from '../components/Card'\n\nimport Fetch from 'isomorphic-unfetch'\nimport  db  from '../data/fakeData';\nimport spring from '../assets/spring.jpg'\nimport mountain from '../assets/mountain.jpg'\nimport xmas from '../assets/xmas.jpg'\n\n\n\nclass Index extends React.Component {\n  constructor(){\n    super()\n    \n    this.state = {\n      btc: 'Hello',\n      name: db.data,\n      photos: [spring, mountain, xmas]\n    }\n  }\n\n  renderCards = () => {\n    for(let i = 0; i < 2; i++){\n      <Card contacts={this.state.name[i].name} description={this.state.name[i].description} photo={this.state.photos[i]}/>\n    }\n  }\n\n\n  render (){\n    return (\n    <Layout>\n        <div className=\"jumbotron bg-dark\">\n          <h1>Hello and Welcome!</h1>\n          {this.state.btc}\n          {/* <Prices coinData={props.data.USD.rate}/> */}\n          BTC/USD: {this.props.data.time.updated}\n          {this.state.name[2].name}\n        </div>\n  \n        <div className=\"row\">\n          {renderC}\n          <Card contacts={this.state.name[0].name} description={this.state.name[0].description} photo={this.state.photos[0]}/>\n          <Card contacts={this.state.name[1].name} description={this.state.name[1].description} photo={this.state.photos[1]}/>\n          <Card contacts={this.state.name[2].name} description={this.state.name[2].description} photo={this.state.photos[2]}/>\n        </div>\n    </Layout>\n    )\n  }  \n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\")\n  const coinData = await res.json()\n\n  return {\n    data: coinData,\n  }\n}\n  \nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAZA;AACA;AACA;AACA;AAHA;AAHA;AAQA;AACA;;;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AArCA;AACA;AAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;A","sourceRoot":""}