{"version":3,"file":"static/webpack/static/development/pages/index.js.bf80f7d2d265e582ff28.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../components/Layout'\nimport CardList from '../components/CardList'\nimport Card from '../components/Card'\n\nimport Fetch from 'isomorphic-unfetch'\nimport  db  from '../data/fakeData';\nimport spring from '../assets/spring.jpg'\nimport mountain from '../assets/mountain.jpg'\nimport xmas from '../assets/xmas.jpg'\n\n\n\nclass Index extends React.Component {\n  constructor(){\n    super()\n    \n    this.state = {\n      btc: 'Hello',\n      cards: [\n        {\n        name: db.data[0].name,\n        description: db.data[0].description,\n        photo: spring\n      },\n        {\n        name: db.data[1].name,\n        description: db.data[1].description,\n        photo: mountain\n      },\n        {\n        name: db.data[2].name,\n        description: db.data[2].description,\n        photo: xmas\n      }    \n    ]\n    }\n  }\n\n  // renderCards = () => {\n  //   for(let i = 0; i < 2; i++){\n \n       \n  //     <Card contacts={this.state.name[i].name} description={this.state.name[i].description} photo={this.state.photos[i]}/>\n      \n  //   }\n  // }\n\n\n  render (){\n    return (\n    <Layout>\n        <div className=\"jumbotron bg-dark\">\n          <h1>Hello and Welcome!</h1>\n          BTC/USD: {this.props.data.time.updated}\n        </div>\n        <div className=\"row\">\n          {this.state.cards.map(card => {\n            return <Card contacts={card.name} description={card.description} photo={card.photo} />\n          })}\n        </div>\n    </Layout>\n    )\n  }  \n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\")\n  const coinData = await res.json()\n\n  return {\n    data: coinData,\n  }\n}\n  \nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAbA;AAHA;AAuBA;AAGA;AAGA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;AAlDA;AACA;AAoDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;A","sourceRoot":""}